Run sh files

First:

chmod +x install.sh
sudo ./install.sh

Second:

chmod +x install_displaylink.sh
sudo ./install_displaylink.sh

Third:

chmod +x util.sh
sudo ./util.sh

/// Running wallpaper at startup

To ensure the wallpaper is set each time you start Hyperland, add the commands to start the swww daemon and set the wallpaper in your Hyperland startup script. Typically, this script is located at ~/.config/hypr/hyprland.conf or ~/.config/hypr/exec-once.sh.

Add the following lines to your startup script:

bash
Copy code
#!/bin/sh

# Start swww daemon
swww-daemon &

# Set the wallpaper
swww img ~/Pictures/wallpaper.jpg

#Commands for languages (Languages are installed automatically by script)

# Install Python using pyenv
echo "Installing pyenv and Python..."
curl https://pyenv.run | bash
echo -e '\n# Pyenv configuration' >> ~/.bashrc
echo 'export PATH="$HOME/.pyenv/bin:$PATH"' >> ~/.bashrc
echo 'eval "$(pyenv init --path)"' >> ~/.bashrc
echo 'eval "$(pyenv init -)"' >> ~/.bashrc
source ~/.bashrc
pyenv install 3.11.4
pyenv global 3.11.4
pip install -U hyfetch

# Install Java using SDKMAN!
echo "Installing SDKMAN! and Java..."
curl -s "https://get.sdkman.io" | bash
source "$HOME/.sdkman/bin/sdkman-init.sh"
sdk install java
java -version

# Install Node.js using nvm
echo "Installing nvm and Node.js..."
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
source ~/.nvm/nvm.sh
nvm install node
nvm use node

# Install Ruby using rbenv
echo "Installing rbenv and Ruby..."
curl -fsSL https://github.com/rbenv/rbenv-installer/raw/main/bin/rbenv-installer | bash
echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
echo 'eval "$(rbenv init -)"' >> ~/.bashrc
source ~/.bashrc
rbenv install 3.1.2
rbenv global 3.1.2

# Install Go
echo "Installing Go..."
wget https://golang.org/dl/go1.20.5.linux-amd64.tar.gz
sudo tar -C /usr/local -xzf go1.20.5.linux-amd64.tar.gz
echo 'export PATH=$PATH:/usr/local/go/bin' >> ~/.bashrc
source ~/.bashrc

# Install Rust
echo "Installing Rust..."
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
source ~/.cargo/env
source ~/.bashrc
rustup update

// This is for Monitor settings in hyprland.conf

monitor= eDP-1,1920x1080@144,auto,1.25
monitor= HDMI-A-1,1920x1080@120,auto,1.25

// To check monitors
wlr-randr

To connect to a Wi-Fi network using iwctl, which is a command-line utility for managing wireless connections in the iwd (iNet wireless daemon), follow these steps:
Step 1: Start iwd

Make sure that the iwd service is running. You can start it with the following command:

// bash

sudo systemctl start iwd
sudo systemctl enable iwd

Step 2: Launch iwctl

Open a terminal and start the iwctl interactive prompt:

// bash

iwctl

Step 3: List Available Devices

Once in the iwctl prompt, list your wireless devices:

// plaintext

device list

This will show you your available wireless interfaces (e.g., wlan0, wlp2s0).
Step 4: Scan for Available Networks

Next, you need to scan for available Wi-Fi networks:

// plaintext

station <device> scan

Replace <device> with the name of your wireless interface (e.g., wlan0).
Step 5: List Available Networks

After scanning, list the available networks:

// plaintext

station <device> get-networks

This will display a list of nearby Wi-Fi networks.
Step 6: Connect to a Wi-Fi Network

To connect to a specific network, use the following command:

// plaintext

station <device> connect <SSID>

Replace <device> with your wireless interface and <SSID> with the name of the Wi-Fi network you want to connect to.
Step 7: Enter the Wi-Fi Password

If the network is secured, youâ€™ll be prompted to enter the password. Type it in and press Enter.
Step 8: Check Connection Status

You can check the connection status by running:

// plaintext

station <device> show

Step 9: Exit iwctl

To exit the iwctl interactive prompt, simply type:

// plaintext

exit

Verify Internet Connection

After connecting to the network, verify your internet connection:

// bash

ping -c 4 google.com

If you receive replies, you're successfully connected to the internet!
Additional Commands

    List connected networks: To see connected networks, you can use:

    plaintext

station <device> show

Disconnect from a network: To disconnect from the current network:

// plaintext

station <device> disconnect


NOTE: Configure your /.config/hyper/hyprland.conf to run things
      that need to be executed at the start of boot and don't forget to login into your github by running "gh auth login"
